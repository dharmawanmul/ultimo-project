@model IEnumerable<Vidly.Models.Movie>

@{
    ViewBag.Title = "Movies";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Movies</h2>
<p>@Html.ActionLink("New Movie", "New", null, new { @class = "btn btn-primary" })</p>
<table class="table table-bordered table-hover" id="movies">
    <thead>
        <tr>
            <th>Movies</th>
            <th>Genre</th>
            <th>Price</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>

@section scripts {
    <script>
        $(document).ready(function () {
            var table = $("#movies").DataTable({
                serverSide: true,
                paging: true,
                //lengthMenu: [[10, 20, 100], [10, 20, 100]],
                pageLength: 2,
                ajax: function (data, callback, settings) {
                    console.log(data);
                    $.ajax({
                        url: `/api/movies/GetMovies?skip=${data.start}&take=${data.length}`,
                        method: "GET",
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        async: false,
                        success: function (response) {
                            callback({
                                data: response.data,
                                recordsTotal: response.recordsTotal,
                                recordsFiltered: response.recordsFiltered
                            });

                            console.log(response.data);
                        },
                        error: function (response) {

                        }
                    });
                },
                columns: [
                    //{
                    //    data: "name",
                    //    name: "name"
                    //},
                    {
                        data: "name",
                        render: function (data, type, movie) {
                            return "<a href='/Movies/Edit/" + movie.id + "'>" + movie.name + "</a>";
                        }
                    },
                    {
                        data: "genre.name"
                    },
                    {
                        data: "price"
                    },
                    {
                        data: "id",
                        render: function (data) {
                            return "<button class='btn-link js-delete' data-movie-id=" + data + ">Delete</button> <a href='/Schedule/Index/" + data + "'>View</a>";
                        }
                    }
                ]
            });

            $("#movies").on("click", ".js-delete", function () {
                var button = $(this);
                bootbox.confirm("Are you sure you want to delete this movies?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/movies/" + button.attr("data-movie-id"),
                            method: "Delete",
                            success: function () {
                                table.row(button.parent("tr")).remove().draw();
                            }
                        });
                    }
                });
            })

            //var listDataSource = new kendo.data.DataSource({
            //    transport: {
            //        read: function (e) {
            //            var filter = e.data.filter == undefined ? "" : JSON.stringify(e.data.filter);
            //            var sort = e.data.sort == undefined ? "" : JSON.stringify(e.data.sort);
            //            var page = e.data.page == undefined ? 1 : e.data.page;
            //            var pageSize = e.data.pageSize == undefined ? 1 : e.data.pageSize;
            //            var skip = e.data.skip == undefined ? 1 : e.data.skip;
            //            var take = e.data.take == undefined ? 1 : e.data.take;

            //            var data = ajaxRequest.Master.GetAllMasterProductDetail(skip, take);
            //            e.success(data);

            //        },
            //        parameterMap: function (options, operation) {
            //            if (operation !== "read" && options.models) {
            //                return options.models[0];
            //            }
            //        }
            //    },
            //    batch: true,
            //    page: 1,
            //    pageSize: 2,
            //    serverPaging: true,
            //    serverSorting: true,
            //    serverFiltering: true,
            //    schema: {
            //        data: "Data",
            //        total: "Total",
            //        model: {
            //            id: "Id",
            //            fields: {
            //                Movies: { type: "string", editable: false },
            //                Genre: { type: "string", editable: false },
            //                Price: { type: "string", editable: false },
            //                Date: { type: "string", editable: false },
            //            }
            //        }
            //    },
            //});
            //console.log(listDataSource);
        });

        
    </script>
}